#+TITLE: World of Emacs

It is an established fact that Emacs is not just a text editor that
you get reminded of only when you need to edit a text file. Emacs is a
multi-tool that one can use for (almost) anything and everything they
do on a computer.

I use the term *World of Emacs* as Emacs is surrounded by experiences
of unusual kinds and depths that are not explainable to non-users (or
disbelievers), creating a level of addiction that lures oneself more
into it, replacing all other tools used for day-to-day workflow by
alternatives from within Emacs and sometimes creating their own tools,
thereby contributing to this free community that share one thing in
common: their love for Emacs.

* Entry

A typical entry to the World of Emacs follows a pattern where a
non-user turns into a fan and an unofficial promoter who alienates
other bodies around by mentioning how they perform a specific task
from within Emacs and make them leave the conversation at the least.

** Question: Why use Emacs?

After a file-browser, a text editor is the most used software on a
computer and as a software developer, I consider myself eligible to
state that developers spend most of their time on a computer within a
text-editor, except for the time we spend with command-line windows
(for the ones who like typing commands). There is a massive variety
of text-editors for one to use and many people do not care much for
which one they use, especially when they can get done with their
day-to-day tasks without learning anything specific for it.

Emacs is not just a text editor. Some call it an operating system,
which comes from the fact that one can possibly do everything that
they do on their computer from within an Emacs window.

So why should one use Emacs? There are way too many reasons. I
delivered a few presentations about it. You can [[https://github.com/myTerminal/presentations/tree/master/technical/why-use-emacs-in-2017][view one that I placed one on GitHub]].

Or, you can listen to what the experts say:

1. [[http://batsov.com/articles/2011/11/19/why-emacs/][Why Emacs? - Bozhidar]]
2. [[http://www.howardism.org/Technical/Emacs/why-emacs.html][Why Learn Emacs - Howard Abrams]]
3. [[http://emacs.sexy/][Why Use Emacs - emacs.sexy]]
4. [[https://opensource.com/article/20/2/who-cares-about-emacs][Who cares about Emacs? - Seth Kenlon (an independent multimedia artist, free culture advocate, and UNIX geek)]]
5. [[https://www.slideshare.net/yukihiro_matz/how-emacs-changed-my-life][How Emacs changed my life - Yukihiro "Matz" Matsumoto (The creator of Ruby)]]

** Question: How to get Emacs?

Emacs comes in different forms. Which one you need depends on (or
dictates your) workflow. You need to find one for yourself and no
matter which flavor you use, it is always free.

Emacs is available on all major operating systems: Windows, Macintosh
and various Linux distributions.

Here is my attempt to list down all possible ways to obtain Emacs.

*** Windows

On Windows, you can just download Emacs binary from
[[http://ftp.gnu.org/gnu/emacs/windows][http://ftp.gnu.org/gnu/emacs/windows]]
and place it in a directory on your disk.

To run Emacs, you can execute the binary ~bin\runemacs.exe~. You can
create a shortcut to this file and place it to your Desktop if you
like and that goes with your preference.

Optionally, you can add this location to your environment variable
~PATH~, so that you will be able to start it from a Command Prompt
window.

*** Macintosh

There are multiple ways to install Emacs on a Macintosh computer. In
fact, there is an Emacs already installed on macOS Sierra. However, it
only runs within a Terminal window.

**** Homebrew/Cask

The simplest one is to do it using [[https://brew.sh][homebrew]]

#+BEGIN_EXAMPLE
brew install emacs
#+END_EXAMPLE

This 'flavor' of Emacs runs within a Terminal window and will not
offer any graphical features.

You can, however, make it look graphical by installing it as

#+BEGIN_EXAMPLE
brew install emacs --with-cocoa
#+END_EXAMPLE

Note that this will still conflict with the version of Emacs already
installed on your system. To be able to launch the newly installed
Emacs from Launchpad or Spotlight, you need to execute the following:

#+BEGIN_EXAMPLE
brew linkapps emacs
#+END_EXAMPLE

Or you can do it with [[https://caskroom.github.io][cask]], which is
the recommended way to install Emacs according to brew.

#+BEGIN_EXAMPLE
brew cask install emacs
#+END_EXAMPLE

This installs the same Emacs as the one available on
[[https://emacsformacosx.com][https://emacsformacosx.com]]. I prefer
this flavor as it behaves almost the same as the one available for
Windows that I first started using.

**** spacemacs

[[http://spacemacs.org][Spacemacs]] is a polished community-driven
Emacs distribution which combines the features of Emacs and
[[http://www.vim.org][Vim]].

The setup involves downloading Emacs and applying the spacemacs
configs over it to provide a more polished experience.

**** Aquamacs

[[http://aquamacs.org][Aquamacs]] is an Emacs distribution with some
extra features.

You can download it from the website.

*** Linux

The method of installation of Emacs on Linux depends upon the
distribution you use.

**** Debian

To install Emacs 24, you can right away type the below in a terminal.

#+BEGIN_EXAMPLE
sudo apt-get install emacs24
#+END_EXAMPLE

To install Emacs 25, you need to add a repository, update sources and
then install it.

#+BEGIN_EXAMPLE
sudo add-apt-repository ppa:kelleyk/emacs sudo apt-get update sudo
apt-get install emacs25
#+END_EXAMPLE

**** Fedora

On Fedora, it is as simple as a dnf command.

#+BEGIN_EXAMPLE
sudo dnf install emacs
#+END_EXAMPLE

*** Misc

I am sure as vast a software Emacs is, there are a lot more ways to
install it and it would be difficult to list all of those methods
here.  To learn about other ways of obtaining Emacs, refer to the
[[https://www.gnu.org/software/emacs/download.html][official
website]].

** Getting Started with Emacs

Learning Emacs can be overwhelming, especially at the start. After all,
it is not just a text editor to edit files!

There is a huge crowd of selfless people waiting to get you in and
there is a variety of tutorials available for you to go through. Emacs
has one in itself.

Emacs needs some patience and dedication at the start but when things
start to sink in, one would soon realize that the initial time spent
was well worth it.

Remember: The start will be slow and within a couple of days, you
could be fairly comfortable.

Below are a set of steps that I recommend to go through to get started
in a systematic manner:

*** The inbuilt Emacs Tutorial

Go through the entire Emacs tutorial that is a part of Emacs
itself. To start the tutorial, launch Emacs and from the welcome
screen, select the option that says 'Emacs Tutorial'.

You will be presented with a long-running screen full of text with
'learn-as-you-do' instructions to help you get acquainted with the
basic key-bindings to get through your initial days within
Emacs. Proceed through the tutorial slowly, do not rush. You may want
to do it more than once to make sure you are comfortable.

*** Emacs Guided Tour

You can view the Emacs Guided Tour from the same screen where you
started the previous tutorial. An option is located on the next line.

This one opens up a web page in your web-browser. You can also visit
it here:
[[https://www.gnu.org/software/emacs/tour][https://www.gnu.org/software/emacs/tour]].

You'll be happy to see some colorful pictures after going through
screens full of plain text.

*** Alternate 'Practical' Tutorial

[[http://ergoemacs.org][ergoemacs.org]] is a not-so-pretty website
that has a lot of useful information on Emacs.

You can also visit
[[http://ergoemacs.org/emacs/emacs.html][http://ergoemacs.org/emacs/emacs.html]]
for a 'practical' tutorial.

*** Yet Another Emacs Tutorial

[[http://david.rothlis.net][David Rothlisberger]] has created a good
website as a detailed
[[http://david.rothlis.net/emacs/tutorial.html][tutorial for Emacs]]
where he talks about everything from installation to using
it. Besides, the website is neat!

*** A Reference card

Refer this
[[https://www.gnu.org/software/emacs/refcards/pdf/refcard.pdf][reference
card]] along the way. Do not worry about learning every single
shortcut right away.

I like to print it and pin it at my office desk.

Also, consider using this cheat sheet. It's a good one with minimal
basics.

[[http://emacs.sexy/img/How-to-Learn-Emacs-v2-Large.png]]

* Daily Life

Regular life in the World of Emacs is full of learning, excitement
and pure satisfaction. One never learns enough Emacs ever due to its
vast nature.

** More than just basics

After the point when you manage to convince yourself to use Emacs in
your workflow and after getting a bit comfortable with it, there are
cheatsheets, detailed references that you can keep coming back to
everyday.

Once you start getting comfortable with Emacs, you do not need to go
through the basics anymore. The key-bindings that used to be so
difficult now start becoming muscle memory to the fingers.

*** A few Emacs references

None of us would be able to learn Emacs entirely. We start with
learning only as much as we need and then we keep going back to a few
guides to learn more as we go. Fortunately, our fellow-creatures have
already created a lot of such reference material for us that we can
refer.

**** The ergoemacs website

The [[http://ergoemacs.org][ergoemacs website]], although it looks
dated (as mentioned earlier), can form a good reference material to
learn Emacs.

There they also have training material for
[[https://www.gnu.org/software/emacs/manual/html_node/elisp][Emacs
Lisp]], which is a dialect of the beautiful language of
[[https://en.wikipedia.org/wiki/Lisp_(programming_language)][Lisp]]. Knowing
at least a bit of Emacs Lisp (or Elisp) helps customize Emacs
better. Who knows, you would end up creating your own Emacs extensions
with Elisp!

**** The Emacs mini manual and more by tuhdo

This [[http://tuhdo.github.io][website]] has a lot of information about
Emacs starting from the 'Why' and 'How' that we covered earlier to
advanced topics like setups specific to programming languages and much
more.

**** The GNU Emacs Manual

If you like reading detailed, lengthy manuals, you can also go through
the [[https://www.gnu.org/software/emacs/manual/emacs.html][GNU Emacs
Manual]] provided by GNU itself.

**** Mastering Emacs - Mickey Peterson

[[https://www.masteringemacs.org][Mastering Emacs]] is a website with
[[https://www.masteringemacs.org/all-articles][numerous articles]] on
how-tos, tips & tricks about Emacs. The author also has a book that
you can buy as a PDF or ePUB, also named as
[[https://www.masteringemacs.org/book][Mastering Emacs]]. The book
follows a systematic approach of introducing Emacs to beginners,
starting from the bare basics, installation and then covering advanced
topics in 280 pages.

If you like reading detailed, lengthy manuals, you can also go through
the [[https://www.gnu.org/software/emacs/manual/emacs.html][GNU Emacs
Manual]] provided by GNU itself.

**** Emacs.sexy

This one is [[http://emacs.sexy][a noteworthy website]] that has quite
a lot of references to places where you can find information about
Emacs.

*** Emacs Packages

As GNU describes, Emacs is an extensible, self-documenting
editor. There are thousands of packages that you can add to your
configuration (and later write your own).

The core of Emacs is written in C++ and the runtime is based on
Elisp. This makes it very easy to modify its behavior by writing a few
lines of Elisp code. That is exactly what those packages out there
are: pieces of nicely written Elisp code that you can 'install' into
your Emacs.

Even when installing packages, Emacs offers a wide set of choices. You
can either download a script file and load it manually into Emacs's
runtime or you can use one of the available package archives.

To start with, there are multiple package management systems, and for
those systems, they have multiple package archives. The two most
popular package management systems are
[[https://www.emacswiki.org/emacs/ELPA][ELPA]] and
[[https://github.com/dimitri/el-get][el-get]]. ELPA is the more common
one among the two

The major package archives for ELPA are:

1. [[http://elpa.gnu.org][gnu ELPA]] is the default package repository for Emacs. It comes configured with Emacs.
2. [[http://melpa.org][melpa]] requires authors to write their own packages and submit them through a strict set of guidelines for quality control. I have only three packages on melpa currently, partly as I do not have the time to align them to MELPA guidelines.
3. [[https://stable.melpa.org][melpa-stable]] is a more stable version of melpa and supposedly hosts release versions of packages on melpa that are known to be stable. All packages on melpa-stable are on melpa and not at all the other way around.
4. [[https://marmalade-repo.org][marmalade]] follows a relaxed approach of submitting packages to the registry where there is no review before a package is submitted. I make sure all my packages are submitted to marmalade. Current I have [[https://marmalade-repo.org/profile/myTerminal][seventeen]] of them there. The absence of a review process still makes you solely responsible for the packages you publish and there's a need to maintain some quality to anything we upload over there.

You can follow
[[https://www.emacswiki.org/emacs/ELPA][https://www.emacswiki.org/emacs/ELPA]]
for instructions on installing packages to your Emacs.

As there are an almost infinite number of Emacs packages out there, some
reside not only on the registries mentioned above, but a few are also
hosted on individual GitHub repositories and a few are circulated as
'.el' files.

If you are confident that you will not be overwhelmed, you can refer
to [[https://github.com/emacs-tw/awesome-emacs][this list of a few
most popular packages for Emacs]] at your own discretion. Remember:
You have been warned, you will lose days of your life browsing through
these packages.

Let's say you went through the entire list of packages, just realize
that it was just one list our of the many that you may find in the
future.

*** Emacs Starter Kits

If you think that finding and installing the right packages for yourself 
is too much of work, there are plenty of starter kits available that
you can use right away.

You can find a list
[[https://github.com/emacs-tw/awesome-emacs#starter-kit][here]].

** Share your Emacs

A few weeks into using Emacs, you realize that you have created an
Emacs of your own. Well actually, you do not create an Emacs of your
own, but you manage to put together some configuration that works
really well with your workflow, and that configuration makes 'your'
Emacs different than the stock Emacs and that from the others.

A very common trend is to create a project on GitHub and share your
dotfiles (a collection of configuration files on your computer, not
just Emacs configuration) with the rest of the world. This practice
makes available so many dotfiles for us to have a look and adopt small
parts of in our own dotfiles.

Apart from helping others, this can also help you share the same
configuration across multiple computers running different operating
systems. I have personally been using the same configuration across
all my three computers running Mac OS, Fedora Linux, and Windows.

You can find a small list of a few noteworthy Emacs configurations
[[https://github.com/emacs-tw/awesome-emacs#noteworthy-configurations][https://github.com/emacs-tw/awesome-emacs#noteworthy-configurations]].

Apart from Emacs, you can also find other dotfiles at
[[https://github.com/webpro/awesome-dotfiles][https://github.com/webpro/awesome-dotfiles]]
and [[https://dotfiles.github.io][https://dotfiles.github.io]].

Lastly, you can also have a look at
[[https://github.com/myTerminal/dotfiles][my dotfiles]],
self-promotion you know!

* Give Back

Once you are comfortable enough in the World of Emacs, you should
consider giving back to the community that helped you get started and
get things done in a much more fun way than you used to do, for free.

** Write your own extensions

Emacs has a package to do almost everything you can imagine. Just in
the case you find something that is not there already, you can create one
yourself and share it with the loving Emacs community.

After a few months of using Emacs (or maybe even earlier than that),
you may want to write your own extensions for Emacs.

As mentioned earlier, Emacs extensions are simply '.el' files
containing scripts written in the beautiful language of Elisp.

Elisp is one of the many dialects that are a part of the family of
functional programming languages called
[[https://en.wikipedia.org/wiki/Lisp_(programming_language)][Lisp]]. Lisp
was created by
[[https://en.wikipedia.org/wiki/John_McCarthy_(computer_scientist)][John
McCarthy]] way back in 1958 and we still see incarnations of Lisp in
form of programming languages like
[[https://en.wikipedia.org/wiki/Clojure][Clojure]] created by
[[https://twitter.com/richhickey][Rich Hickey]] in 2007.

*** Learning Elisp

Learning basic Elisp should be simple and as usual, there are quite a
lot of resources on the internet, some of which are:

1. [[http://ergoemacs.org/emacs/elisp.html][Practical Emacs Lisp - ergoemacs]]
2. [[https://www.gnu.org/software/emacs/manual/eintr.html][An Introduction to Programming in Emacs Lisp - gnu.org]]
3. [[https://www.gnu.org/software/emacs/manual/elisp.html][GNU Emacs Lisp Reference Manual]]

I always like to learn a few basics and start writing my own code to
get glued to the language, start getting comfortable and gain
confidence before I progress to relatively advanced topics.

*** Writing extensions

Thought writing extensions is easy, one needs to follow a few
conventions that the community has agreed upon before we publish our
packages out there. The conventions include design practices, coding
style and commenting formats including file headers and footers.

Read through the post
[[https://blog.aaronbieber.com/2015/08/04/authoring-emacs-packages.html][Authoring
Emacs Packages]] by Aaron Bieber to get an idea.

Also, read through the
[[https://www.gnu.org/software/emacs/manual/html_node/elisp/Coding-Conventions.html][Coding
Conventions]] described within the GNU Emacs Lisp Reference Manual
that mentions a few basic practices to keep in mind.

There's also an
[[http://www.nongnu.org/emacs-tiny-tools/packages/index-body.html][Emacs
Lisp coding checklist]] that you can refer to save you some rework
later.

*** Publishing Extensions

The steps you need to take in order to publish a package to a
repository depends upon the repository itself. You would mostly be
publishing your packages to the repositories that we discussed
earlier.

The simplest one to go for is marmalade-repo, through melpa,
melpa-stable and lastly the GNU ELPA.  The harder the publishing
process is, the better is the quality of packages.

Specific steps for each of the repositories are linked below:

1. [[https://marmalade-repo.org/#upload][marmalade-repo - How to upload packages]]
2. [[https://github.com/melpa/melpa/blob/master/CONTRIBUTING.md][Contributing to MELPA]]
3. [[https://github.com/melpa/melpa#melpa-stable][Contributing to MELPA stable]]
4. [[https://www.emacswiki.org/emacs/ELPA#toc2][Contributing to GNU ELPA]]

** Help others learn

Once Emacs becomes a part of your daily workflow, you start to realize
that you are getting more efficient in some of the daily tasks that
you do on your computer. You feel like you're learning something
every day, growing yourself along with your ever-evolving Emacs
configuration.

If you choose to share your configuration on GitHub, you see the
number of commits increase with time and if you manage to publish a
few packages of your own, you can probably find the number of stars on
GitHub or the download count on the repository.

The next thing that you can do is to help others learn Emacs. There
are various forms of training material available: posts and articles
about tips and tricks and individual experiences with Emacs, GitHub
projects containing documentation (like this one), websites
specifically created to host content about Emacs, YouTube training
videos, etc.

A very few of the available video series are listed below:

1. [[https://www.youtube.com/watch?v=B6jfrrwR10k][Emacs Introduction and Demonstration - Howard Abrams]]
2. [[https://www.youtube.com/watch?v=rxLzIbePW2I][Learn Emacs in a Weekend! - Tom Walker]]
3. [[http://emacsrocks.com][Emacs Rocks!]]
4. [[https://www.youtube.com/playlist?list=PLPCM9PO0p2kLGcF0fOrg0cMoFnWZRFScV][Role-playing with Emacs]] - a video series started by me a while back but is still incomplete
5. [[https://www.youtube.com/playlist?list=PLPCM9PO0p2kKs9W1JjkuyfJb7LmH2Ju2q][How to Configure Emacs]] - another incomplete series by me about configuring Emacs
6. [[https://www.youtube.com/playlist?list=PL-mFLc7R_MJd5FoIrbNAcndPT50_hbVST][Emacs Tutorials for Beginners - b yuksel]]

* Feedback

I need your help making this guide a more seamless experience for
getting into the *World of Emacs*.

# Local Variables:
# fill-column: 70
# eval: (auto-fill-mode 1)
# End:
